# control which branches use this file
branches:
  only:
    - master
   #except:
    #- master

# Environment variables with names that match build image can be a list of broken python versions.
# For example Ubuntu1604="3.10 3.11"
# These are typically set in the appveyor ui, environment tab.
# This makes it easy to modify and rebuild.
# This is used in the 'init script' below
# To allow easily checking/updating broken images, these are set in the GUI.

# branch build uses a subset of appveyor images, master uses all
image:
  - Ubuntu2204
  - Ubuntu
  - Ubuntu2004

# everything below this line should be identical when comparing branch build to master build

# Do not build on tags (GitHub, Bitbucket, GitLab, Gitea)
# skip_tags: true

# Do not build feature branch with open Pull Requests
skip_branch_with_pr: true

environment:
  # secure values
  SKEY:
    secure: YyPit9bsTGKQYJEkmv6qAajHzVj+OV9UQKRL5b/sHyJ2SuzSDmjEZO0JRSLlbdyW
  COVERALLS_REPO_TOKEN:
    secure: tyj1Sii8/fPCjipAJUxxlXO1IhvCXFIyiZE0cPuYKHGGiyKgbUq5O0xD34VUq5E/
  # common values
  # To see list of versions https://binaries.sonarsource.com/?prefix=Distribution/sonar-scanner-cli/
  SONAR_SCANNER_VERSION: 5.0.1.3006
  SONAR_SCANNER_OPTS: -server
  # default values
  # default to oldest supported version of python
  PYTHON_LATEST: 3.12
  PYTHON: 3.7
  WEEWX_OLDEST: 4.6.1
  WEEWX_LATEST: 5.1.0
  # paho-mqtt 2.0.0 introduced an incompatible change, this is the old version
  MQTT_VERSION: 1.6.1
  ENABLED: true
  RUN_FTESTS: true
  RUN_ITESTS: true
  
  WEEWX_URL: http://www.weewx.com/downloads/released_versions/

  matrix:
    # Run tests against latest WeeWX and Python
    # This run uploads test results and sonar results
    # Run first, so that completes early
    - PYTHON: '%PYTHON_LATEST%'
      WEEWX: '%WEEWX_LATEST%'
      MQTT_VERSION: '%MQTT_VERSION%'
      CODECOVIO_UPLOAD: true
      COVERALLS_UPLOAD: true
      SONAR_UPLOAD: true
      job_group: build  
      job_depends_on: initialize
      #ENABLED: false

    # Start of runs against latest WeeWX release and supported versions of Python
    # Even though EOL, I'll support a bit longer

    - PYTHON: 3.7
      WEEWX: '%WEEWX_LATEST%'
      MQTT_VERSION: '%MQTT_VERSION%'      
      job_group: build  
      job_depends_on: initialize
      #ENABLED: false

    - PYTHON: 3.8
      WEEWX: '%WEEWX_LATEST%'
      MQTT_VERSION: '%MQTT_VERSION%'      
      job_group: build  
      job_depends_on: initialize
      #ENABLED: false

    - PYTHON: 3.9
      WEEWX: '%WEEWX_LATEST%'
      MQTT_VERSION: '%MQTT_VERSION%'      
      job_group: build  
      job_depends_on: initialize
      #ENABLED: false

    - PYTHON: 3.10
      WEEWX: '%WEEWX_LATEST%'
      MQTT_VERSION: '%MQTT_VERSION%'      
      job_group: build  
      job_depends_on: initialize
      #ENABLED: false

    - PYTHON: 3.11
      WEEWX: '%WEEWX_LATEST%'
      MQTT_VERSION: '%MQTT_VERSION%'      
      job_group: build  
      job_depends_on: initialize
      #ENABLED: false

    - PYTHON: 3.12
      WEEWX: '%WEEWX_LATEST%'
      MQTT_VERSION: '%MQTT_VERSION%'      
      job_group: build  
      job_depends_on: initialize
      #ENABLED: false

    - PYTHON: 3.13
      WEEWX: '%WEEWX_LATEST%'
      MQTT_VERSION: '%MQTT_VERSION%'      
      job_group: build  
      job_depends_on: initialize
      #ENABLED: false

    # End of runs against latest WeeWX release and supported versions of Python

    # The earliest WeeWX version supported
    # Does not support python > 3.11.x
    - PYTHON: 3.11
      WEEWX: '%WEEWX_OLDEST%'
      MQTT_VERSION: '%MQTT_VERSION%'      
      job_group: build
      job_depends_on: initialize
      #ENABLED: false

    # Use latest Python release against WeeWX master branch
    - PYTHON: '%PYTHON_LATEST%'
      BRANCH: master
      WEEWX: '%BRANCH%'
      MQTT_VERSION: '%MQTT_VERSION%'      
      job_group: build  
      job_depends_on: initialize      
      #ENABLED: false

    # Use latest Python release against WeeWX development branch
    - PYTHON: '%PYTHON_LATEST%'
      BRANCH: development
      WEEWX: '%BRANCH%'
      MQTT_VERSION: '%MQTT_VERSION%'      
      job_group: build  
      job_depends_on: initialize            
      #ENABLED: false

    # Build/Test against a development/pre release of WeeWX with latest Python
    # These do not always exist
    - ENABLED: false
      PYTHON: '%PYTHON_LATEST%'
      WEEWX: 4.9.0b1
      WEEWX_URL: http://www.weewx.com/downloads/development_versions/
      MQTT_VERSION: '%MQTT_VERSION%'      
      job_group: build  
      job_depends_on: initialize

    # Run tests against latest WeeWX, Python, and latest paho-mqtt
    - PYTHON: '%PYTHON_LATEST%'
      WEEWX: '%WEEWX_LATEST%'
      MQTT_VERSION: ''
      job_group: build  
      job_depends_on: initialize
      #ENABLED: false

    - job_name: initialize
      WEEWX_URL: http://www.weewx.com/downloads/development_versions/

    - job_name: finalize
      job_depends_on: build
      WEEWX_URL: http://www.weewx.com/downloads/development_versions/

stack: python %PYTHON%

for:
- 
  matrix:
    only:
    - job_name: initialize

  install:
    - sh: echo "install unneeded"    

  build: off

- 
  matrix:
    only:
    - job_name: finalize

  install:
    - sh: echo "install unneeded"    

  build_script:
    - sh: echo "finalize"
    #- sh: curl -k https://coveralls.io/webhook?repo_token=$COVERALLS_REPO_TOKEN -d "payload[build_num]=$APPVEYOR_BUILD_ID&payload[status]=done"

- 
  matrix:
    only:
    - job_group: build

  build_script:
    - sh: echo "build_script"
    - sh: appveyor/build_script.sh  

  test_script:
    - sh: echo "test_script"
    - sh: appveyor/test_script.sh

  after_test:
    - sh: echo "after_test"
    - sh: appveyor/after_test.sh

# common/default scripts
init:
  # This runs before the commit is even checked out
  # Therefore cannot run scripts in Github
  - sh: echo "init"
  - sh: echo ""

  - sh: >-
      echo "Build Image:" "$APPVEYOR_REPO_TAG_NAME";
      APPVEYOR_SKIP_FINALIZE_ON_EXIT=true;
      exit 0;

  # These tags are 'derived'. They are created when a release vX.Y.Z is created.
  # Therefore there is no reason to run the build process against them.
  - sh: >-
      if [[ $APPVEYOR_REPO_TAG_NAME == 'latest' || $APPVEYOR_REPO_TAG_NAME =~ ^v[0123456789]+$ ]] ; then 
          echo "Skipping runing tests for tag: $APPVEYOR_REPO_TAG_NAME"
          APPVEYOR_SKIP_FINALIZE_ON_EXIT=true
          exit 0;
      fi;

  - sh: >-
      if [ "$ENABLE_SSH_AT_START" == "true" ] && [ "$STOP_WITH_BUILD_IMAGE" = "$APPVEYOR_BUILD_WORKER_IMAGE" ] && [ "$STOP_WITH_PYTHON_VERSION" = "$PYTHON" ] ; then
          export APPVEYOR_SSH_BLOCK=true
          curl -sflL 'https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-ssh.sh' | bash -e -
      fi;
  
  - sh: echo "Build Image:" "$APPVEYOR_BUILD_WORKER_IMAGE"
  - sh: echo "Python Version:" "$PYTHON"
  - sh: echo "WeeWX Version:" "$WEEWX"
  - sh: echo "MQTT Version:" "$MQTT_VERSION"
  - sh: echo "These versions of python are broken on this build image:" "${!APPVEYOR_BUILD_WORKER_IMAGE}" 
  - sh: lsb_release -a
  - sh: >-
      if [[ ${!APPVEYOR_BUILD_WORKER_IMAGE} == *$PYTHON* ]]; then
        echo "$APPVEYOR_BUILD_WORKER_IMAGE with $PYTHON is broken on Appveyor."
        exit 0
      fi;

install:
  - sh: echo "install"
  # 'source' so that variables are set in parent environment
  - sh: source appveyor/init.sh   
  - sh: appveyor/install.sh    
   
on_finish:
  - sh: echo "on_finish"
  - sh: appveyor/on_finish.sh
