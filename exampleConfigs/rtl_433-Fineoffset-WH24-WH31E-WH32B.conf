# Example MQTTSubscribe WeeWX configuration to subscribe to the topics published for the Fineoffset-WH24, WH32B, and WH31E sensors.
#
# Author: Chris Weakland (chris.weakland@gmail.com)
#
# Tested with MQTTSubscribe version v3.0.0-rc09
#

[MQTTSubscribeDriver]
    # This section is for the MQTTSubscribe driver.
    
    # The driver to use:
    driver = user.MQTTSubscribe
    
    # The MQTT server.
    # Default is localhost.
    host = XXXXXXXX
    
    # The port to connect to.
    # Default is 1883.
    port = 1883
    
    # Maximum period in seconds allowed between communications with the broker.
    # Default is 60.
    keepalive = 60
    
    # username for broker authentication.
    # Default is None.
    username = XXXXXXXX
    
    # password for broker authentication.
    # Default is None.
    password = XXXXXXXX
    
    # Controls if validation errors raise an exception (stopping WeeWX from starting) or only logged.
    # Default is false
    stop_on_validation_errors = true
    binding = loop
    log = false
    
    # Configuration for the message callback.
    [[message_callback]]
        # The format of the MQTT payload.
        # Currently support: individual, json, keyword
        # Must be specified.
        type = individual
    
    # The topics to subscribe to.
    [[topics]]
        
        # Units for MQTT payloads without unit value.
        # Valid values: US, METRIC, METRICWX
        # Default is: US
        unit_system = METRIC
        
        [[[rtl_433/piradio/devices/Fineoffset-WH24/67/temperature_C]]]
            name = outTemp
        [[[rtl_433/piradio/devices/Fineoffset-WH24/67/humidity]]]
            name = outHumidity
        [[[rtl_433/piradio/devices/Fineoffset-WH24/67/wind_dir_deg]]]
            name = windDir
        [[[rtl_433/piradio/devices/Fineoffset-WH24/67/wind_avg_m_s]]]
            name = windSpeed
        [[[rtl_433/piradio/devices/Fineoffset-WH24/67/wind_max_m_s]]]
            name = windGust
        [[[rtl_433/piradio/devices/Fineoffset-WH24/67/rain_mm]]]
            name = rain
            contains_total = True
            units = mm
        [[[rtl_433/piradio/devices/Fineoffset-WH24/67/uvi]]]
            name = UV
        [[[rtl_433/piradio/devices/Fineoffset-WH24/67/light_lux]]]
            name = luminosity
        [[[rtl_433/piradio/devices/Fineoffset-WH24/67/battery_ok]]]
            name = outTempBatteryStatus
        
        [[[rtl_433/piradio/devices/Fineoffset-WH32B/231/battery_ok]]]
            name = inBatteryStatus
        [[[rtl_433/piradio/devices/Fineoffset-WH32B/231/temperature_C]]]
            name = inTemp
        [[[rtl_433/piradio/devices/Fineoffset-WH32B/231/humidity]]]
            name = inHumidity
        [[[rtl_433/piradio/devices/Fineoffset-WH32B/231/pressure_hPa]]]
            name = pressure
            units = hPa
        
        [[[rtl_433/piradio/devices/AmbientWeather-WH31E/1/221/battery_ok]]]
            name = extraBatteryStatus1
        [[[rtl_433/piradio/devices/AmbientWeather-WH31E/1/221/temperature_C]]]
            name = extraTemp1
        [[[rtl_433/piradio/devices/AmbientWeather-WH31E/1/221/humidity]]]
            name = extraHumid1
			
[StdCalibrate]
    
    [[Corrections]]
        # For each type, an arbitrary calibration expression can be given.
        # It should be in the units defined in the StdConvert section.
        # Example:
        foo = foo + 0.2
        barometer = barometer / 100
        radiation = luminosity / 126.7